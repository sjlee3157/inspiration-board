{"version":3,"sources":["components/Card.js","components/CardForm.js","components/Board.js","App.js","registerServiceWorker.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","text","icon","emoji","getUnicode","displayEmoji","id","Infinity","onClick","showEditFormCallback","displayEdit","onDeleteCallback","EMOJI_LIST","concat","Object","toConsumableArray","names","CardForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onFormChange","e","field","target","name","value","newState","setState","onSubmitHandler","preventDefault","_this$state","state","errors","console","log","getErrorsCallback","newCard","objectSpread","formType_isEditForm","editCardCallback","addCardCallback","resetState","unicode","displayTitle","_this2","_this$state2","getEmojiOptions","map","key","components_Card","cardType_isNewCard","formType_isNewForm","cardType_isEditCard","onSubmit","htmlFor","onChange","type","formType__isNewForm","Component","Board","addCard","axios","post","url","then","response","data","card","cards","catch","error","cause","deleteCard","delete","cardIndex","undefined","forEach","i","splice","editCard","cardPatch","patch","getErrors","showEditForm","href","boardName","errorsList","keys","length","allCards","newCardForm","components_CardForm","push","onEditCallback","cardType_isBasicCard","buildCardElements","_this3","get","boardObject","sort","b","reverse","App","components_Board","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2b537e59.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './style/Card.css';\n\nconst Card = (props) => {\n  const displayEmoji = () => {\n    const icon = emoji.getUnicode(props.emoji);\n    return (icon ? icon : props.emoji)\n  };\n\n  const displayDelete = () => {\n    return (\n      <button className=\"card__tools-button\"\n        onClick={ () => props.onDeleteCallback(props.id) }>\n        X\n      </button>\n    )\n  }\n\n  const displayEdit = () => {\n    const { id, text, emoji } = props;\n    return (\n      <button className=\"card__tools-button\"\n        onClick={ () => props.showEditFormCallback( { id, text, emoji }) }>\n        Edit\n      </button>\n    )\n  }\n\n  return (\n    <section className=\"card\">\n      <div className=\"card__content\">\n        <div className=\"card__content-text\">\n          { props.children }\n          { props.text }\n        </div>\n        <div className=\"card__content-emoji\">\n          { displayEmoji() }\n          { /* Todo: place form body here */ }\n        </div>\n      </div>\n      <div className=\"card__tools\">\n        { props.id !== Infinity && displayEdit() }\n        { props.id !== Infinity && displayDelete() }\n      </div>\n    </section>\n  )\n}\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n  onDeleteCallback: PropTypes.func,\n  showEditFormCallback: PropTypes.func,\n  cardType_isEditCard: PropTypes.bool,\n  cardType_isNewCard: PropTypes.bool,\n  cardType_isBasicCard: PropTypes.bool,\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './style/CardForm.css';\nimport Card from './Card';\n\nconst EMOJI_LIST = ['', ...emoji.names];\n// const EMOJI_LIST = [\n//  \"\", \"poop\", \"heart_eyes\", \"skull\", \"clap\", \"sparkling_heart\",\n//  \"heart_eyes_cat\", \"dog\"\n// ]\n\nclass CardForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = ({\n      text: (props.formType_isEditForm ? props.text : ''),\n      emoji: (props.formType_isEditForm ? props.emoji : '')\n    })\n  }\n\n  onFormChange = (e) => {\n    const field = e.target.name;\n    const value = e.target.value;\n\n    const newState = {};\n    newState[field] = value;\n    this.setState(newState);\n  }\n\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const { text, emoji } = this.state;\n    if (text === '' || emoji === '') {\n      const errors = {};\n      if (text === '') { errors['Text Validation'] = 'You must enter text!' };\n      if (emoji === '') { errors['Emoji Validation'] = 'You must select an emoji!' };\n      console.log('You have form validation errors')\n      return this.props.getErrorsCallback(errors);\n    } else {\n      const newCard = { ...this.state }\n      if (this.props.formType_isEditForm) {\n        newCard.id = this.props.id;\n        this.props.editCardCallback(newCard);\n      } else {\n        this.props.addCardCallback(newCard);\n      }\n      this.resetState();\n    }\n  }\n\n  resetState = () => {\n    this.setState({\n      text: '',\n      emoji: ''\n    });\n  }\n\n  displayEmoji = (unicode) => {\n    const icon = emoji.getUnicode(unicode);\n    return (icon ? icon : unicode)\n  };\n\n  displayTitle = () => {\n    return (this.props.formType_isEditForm ?  'Edit Card' : 'Create A New Card');\n  }\n\n  render() {\n    const { text, emoji } = this.state;\n\n    const getEmojiOptions = EMOJI_LIST.map((unicode) => {\n      return (\n        <option key={ unicode} value={ unicode }>\n          { this.displayEmoji(unicode) } { unicode }\n        </option>\n      )\n    })\n    return (\n      <Card text=\"\" emoji=\"\" id={ Infinity }\n        cardType_isNewCard={ this.props.formType_isNewForm }\n        cardType_isEditCard={ this.props.formType_isEditForm }>\n        <section className=\"new-card-form\">\n          <section className=\"new-card-form__header\">\n            { this.displayTitle() }\n          </section>\n          <form className=\"new-card-form__form\" onSubmit={ this.onSubmitHandler }>\n            <label className=\"new-card-form__label\" htmlFor=\"text\">Text</label>\n              <textarea className=\"new-card-form__textarea\" name=\"text\"\n                onChange={ this.onFormChange } value={ text }>\n              </textarea>\n            <label className=\"new-card-form__label\" htmlFor=\"emoji\">Emoji</label>\n              <select className=\"new-card-form__select\" name=\"emoji\" onChange={ this.onFormChange } value={ emoji }>\n                { getEmojiOptions }\n              </select>\n            <input className=\"new-card-form__form-button\"\n              type=\"submit\"\n              name=\"submit\"\n              value={ this.props.formType__isNewForm ? 'Pin It!' : 'Save!' } />\n          </form>\n        </section>\n      </Card>\n    )\n  }\n}\n\nCardForm.propTypes = {\n  addCardCallback: PropTypes.func,\n  getErrorsCallback: PropTypes.func,\n  editCardCallback: PropTypes.func,\n  id: PropTypes.number,\n  text: PropTypes.string,\n  emoji: PropTypes.string,\n  formType_isNewForm: PropTypes.bool,\n  formType_isEditForm: PropTypes.bool\n};\n\nexport default CardForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './style/Board.css';\nimport Card from './Card';\nimport CardForm from './CardForm';\n// import CARD_DATA from '../data/card-data.json';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cards: [],\n      errors: {}\n    };\n  }\n\n  addCard = (newCard) => {\n    const { text, emoji } = newCard;\n    axios.post(this.props.url, { text, emoji })\n      .then((response) => {\n        newCard.id = response.data.card.id;\n        let { cards, errors } = this.state;\n        cards = [ newCard, ...cards ]\n        errors = {};\n        this.setState({ cards, errors });\n        console.log(`Successfully added card ${newCard.id}`);\n      })\n      .catch((error) => {\n        console.log(`Error adding new card: ${error.response.data.cause}`);\n      })\n  }\n\n  deleteCard = (id) => {\n    const url = 'https://inspiration-board.herokuapp.com/cards/' + id\n    console.log(`Attempting to delete card ${id}`)\n    axios.delete(url)\n      .then((response) => {\n        let { cards } = this.state;\n        let cardIndex = undefined;\n        cards.forEach((card, i) => {\n          if (card.id === id ) { cardIndex = i}\n        })\n        cards.splice(cardIndex, 1);\n        this.setState({ cards });\n        console.log(`Successfully deleted card ${response.data.card.id}`);\n      })\n      .catch((error) => {\n        console.log(`Error deleting card: ${error.response.data.cause}`);\n      })\n  }\n\n  editCard = (cardPatch) => {\n    const url = 'https://inspiration-board.herokuapp.com/cards/' + cardPatch.id\n    console.log(`Attempting to edit card ${cardPatch.id}`)\n    const { text, emoji } = cardPatch;\n    axios.patch(url, { text, emoji } )\n      .then((response) => {\n        let { cards } = this.state;\n        let cardIndex = undefined;\n        cards.forEach((card, i) => {\n          if (card.id === cardPatch.id) {\n            cardIndex = i\n          }\n        })\n        cards[cardIndex] = cardPatch\n        this.setState({ cards });\n        console.log(`Successfully edited card ${response.data.card.id}`);\n      })\n      .catch((error) => {\n        console.log(`Error editing card: ${error.response.data.cause}`);\n      })\n  }\n\n  getErrors = (errors) => {\n    console.log(errors);\n    this.setState({ errors: errors });\n  }\n\n  showEditForm = (cardPatch) => {\n    console.log(`Attempting to render edit form for card ${cardPatch.id}`);\n    let { cards } = this.state;\n    cards.forEach((card) => {\n      if (card.id === cardPatch.id) {\n        card.cardType_isEditCard = true;\n      }\n    } )\n    this.setState({ cards });\n  }\n\n  render() {\n    const buildCardElements = () => {\n      let allCards = []\n      const newCardForm = (\n        <CardForm\n          key=\"newCardForm\"\n          addCardCallback={ this.addCard }\n          getErrorsCallback={ this.getErrors }\n          formType_isNewForm={ true }\n        />);\n      allCards.push(newCardForm);\n      allCards.push(this.state.cards.map((card) => {\n        if (card.cardType_isEditCard) {\n          return (\n            <CardForm\n              key=\"editCardForm\"\n              id={ card.id }\n              text={ card.text }\n              emoji={ card.emoji }\n              editCardCallback={ this.editCard }\n              getErrorsCallback={ this.getErrors }\n              formType_isEditForm={ true }\n            />\n          )\n        } else {\n          return (\n          <Card\n            key={ card.id }\n            id={ card.id }\n            text={ card.text ? card.text : '' }\n            emoji={ card.emoji ? card.emoji : '' }\n            onDeleteCallback={ this.deleteCard }\n            onEditCallback={ this.editCard }\n            showEditFormCallback={ this.showEditForm }\n            cardType_isBasicCard={ true }\n          />\n        )}\n      }));\n      return allCards;\n    }\n\n    const errors = () => {\n      let { errors } = this.state;\n      const errorsList = Object.keys(errors).map((type) => {\n        return (<li key={ type }><strong>{ type } error:</strong> { errors[type] }</li>)\n      });\n      return (\n        <ul className=\"validation-errors-display__list\"> { errorsList }</ul>\n      )\n    }\n\n    return (\n      <section>\n        <h2>\n          Board: <a href={ this.props.url }>{ this.props.boardName }</a>\n        </h2>\n        <section className=\"validation-errors--display\">\n          { this.state.errors && errors() }\n          { /* TODO: status messages */ }\n        </section>\n        <section className=\"board\">\n          { this.state.cards.length > 0 && buildCardElements() }\n        </section>\n      </section>\n    )\n  }\n\n  componentDidMount() {\n    axios.get( this.props.url )\n      .then((response) => {\n        let cards = response.data.map((boardObject) => {\n          let card = boardObject['card'];\n          card = {\n            id: (card.id),\n            text: (card.text),\n            emoji: (card.emoji)\n          }\n          return card;\n      });\n        cards = cards.sort((a, b) => { return a.id - b.id }).reverse();\n        this.setState({ cards });\n        console.log(`Successfully loaded ${cards.length} cards`);\n      })\n      .catch((error) => {\n        console.log(`Error loading cards: ${error.response.data.cause}`);\n      });\n  }\n\n}\n\nBoard.propTypes = {\n  url: PropTypes.string.isRequired,\n  boardName: PropTypes.string.isRequired\n};\n\nexport default Board;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './components/Board';\n\nconst BOARD_NAME = 'sammi jo'\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <header className=\"header\">\n          <h1 className=\"header__h1\"><span className=\"header__text\">\n            Inspiration Board\n          </span></h1>\n        </header>\n        <Board\n          url={ `https://inspiration-board.herokuapp.com/boards/${BOARD_NAME}/cards` }\n          boardName={ BOARD_NAME }\n          />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}